group 'org.test'
version '1.0-SNAPSHOT'

apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'

    implementation group: 'info.cukes', name: 'cucumber-java', version: '1.2.5'
    implementation group: 'info.cukes', name: 'cucumber-core', version: '1.1.8'
    implementation group: 'info.cukes', name: 'cucumber-jvm-deps', version: '1.0.5'

    //implementation group: 'io.appium', name: 'java-client', version: '6.0.0-BETA5'
    implementation 'org.seleniumhq.selenium:selenium-java:3.9.2'
    implementation (group: 'io.appium', name: 'java-client', version: '7.0.0') {
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.apache.ant', module: 'ant'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
        exclude group: 'org.springframework', module: 'spring-core'
    }
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.9'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    implementation group: 'org.apache.ant', name: 'ant', version: '1.10.9'
    implementation (group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    implementation group: 'org.springframework', name: 'spring-core', version: '5.3.14'

    //implementation 'org.seleniumhq.selenium:selenium-java:4.1.2'

    //implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation (group: 'net.masterthought', name: 'cucumber-reporting', version: '4.11.0') {
        exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
        exclude group: 'org.apache.velocity', module: 'velocity-engine-core'
        exclude group: 'org.jsoup', module: 'jsoup'
        exclude group: 'com.googlecode.owasp-java-html-sanitizer', module: 'owasp-java-html-sanitizer'
        exclude group: 'commons-io', module: 'commons-io'
    }
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.1'
    implementation 'org.apache.velocity:velocity-engine-core:2.3'
    implementation 'org.jsoup:jsoup:1.14.2'
    implementation 'com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer:20211018.2'
    //implementation group: 'net.masterthought', name: 'cucumber-reporting', version: '4.2.3'
    //implementation 'com.github.mkolisnyk:cucumber-runner:1.3.3'
    //implementation 'com.github.mkolisnyk:cucumber-report-generator:1.3.3'
    //implementation 'com.github.mkolisnyk:cucumber-reports:0.0.2'
    implementation ('com.github.mkolisnyk:cucumber-runner:1.3.5') {
        exclude group: 'batik', module: 'batik-dom'
        exclude group: 'batik', module: 'batik-svg-dom'
        exclude group: 'batik', module: 'batik-bridge'
        exclude group: 'batik', module: 'batik-script'
        exclude group: 'batik', module: 'batik-transcoder'
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'org.beanshell', module: 'bsh'
        exclude group: 'org.freemarker', module: 'freemarker'
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.testng', module: 'testng'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'junit', module: 'junit'
    }
    implementation 'junit:junit:4.13.1'
    implementation ('com.github.mkolisnyk:cucumber-report-generator:1.3.5') {
        exclude group: 'batik', module: 'batik-svg-dom'
        exclude group: 'batik', module: 'batik-script'
        exclude group: 'batik', module: 'batik-dom'
        exclude group: 'batik', module: 'batik-transcoder'
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'org.beanshell', module: 'bsh'
        exclude group: 'org.freemarker', module: 'freemarker'
        exclude group: 'com.beust', module: 'jcommander'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'org.testng', module: 'testng'
        exclude group: 'commons-codec', module: 'commons-codec'
        exclude group: 'junit', module: 'junit'
    }
    implementation 'org.freemarker:freemarker:2.3.30'
    implementation 'com.beust:jcommander:1.75'
    implementation ('com.github.mkolisnyk:cucumber-reports:1.3.5') {
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
        exclude group: 'commons-io', module: 'commons-io'
        exclude group: 'junit', module: 'junit'
    }
    implementation ('org.apache.xmlgraphics:batik-dom:1.14') {
        exclude group: 'commons-io', module: 'commons-io'
    }
    implementation 'commons-io:commons-io:2.7'
}

test {
    systemProperty "file.encoding", "utf-8"
}

sourceSets {
    test.java.srcDir "src/test/java"
}

configurations {
    cucumberRuntime.extendsFrom testImplementation
}


task launcherJar(type: Jar) {
    dependsOn configurations.cucumberRuntime
    doFirst {
        manifest {
            attributes "Class-Path": configurations.cucumberRuntime.files.collect {
                //println("it :" + it)
                it.toString().replaceFirst(/file:\/+/, '/').replace(' ', '%20')
            }.join(' ')
        }
    }
    doLast {
        buildDir.mkdirs()
        new File(buildDir, "classpath.txt").text = configurations.runtime.asPath + "\n"
        mkdir "${buildDir}/reports"
        new File("${buildDir}/reports/", "cucumber-report.json")
        new File("${buildDir}/reports/", "cucumber-usage-report.json")
    }
}


task cucumber() {
    dependsOn assemble, testClasses, launcherJar
    doLast {
        println("build.gradle ==>> tagSelected: " + tagSelected)
        javaexec {
            systemProperty 'env', System.getProperty('env')
            systemProperty 'platformName', System.getProperty('platformName')
            systemProperty 'runWith', System.getProperty('runWith')
            systemProperty 'deviceName', System.getProperty('deviceName')
            systemProperty 'platformVersion', System.getProperty('platformVersion')
            systemProperty 'udid', System.getProperty('udid')
            systemProperty 'avd', System.getProperty('avd')
            main = "com.matrix.automation.runner.CucumberRunner"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--monochrome',
                    '--plugin', 'pretty',
                    '--plugin', 'html:build/reports/',
                    '--plugin', 'json:build/reports/cucumber-report.json',
                    '--plugin', 'usage:build/reports/cucumber-usage-report.json',
                    '--plugin', 'pretty:build/reports/cucumber-pretty.txt',
                    '--plugin', 'com.matrix.automation.runner.CustomFormatter',
                    '--glue', 'com.matrix.automation.app',
                    'src/test/java',
                    '--tags', tagSelected]
        }
    }
}

build.dependsOn cucumber

/////////////////

/*
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:target/cucumber-report.html',
                    '--glue', 'com.baeldung.cucumber',
                    'src/test/resources']
        }
    }
}


build.dependsOn cucumberCli
*/


/*task writeClasspath() {
    doLast {
        buildDir.mkdirs()
        new File(buildDir, "classpath.txt").text = configurations.runtime.asPath + "\n"
        mkdir "${buildDir}/reports"
        new File("${buildDir}/reports/", "cucumber-report.json")
        new File("${buildDir}/reports/", "cucumber-usage-report.json")
    }
}*/

/*test {
    useTestNG()
    //useJUnitPlatform()
}*/

/*configurations {
    cucumberRuntime.extendsFrom testRuntime
}*/

